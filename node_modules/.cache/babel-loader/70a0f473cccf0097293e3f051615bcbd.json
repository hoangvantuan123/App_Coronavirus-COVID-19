{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ramma\\\\Desktop\\\\app_covid19\\\\my-app-covid\\\\src\\\\Element\\\\ChartsDeaths\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport Highcharts from 'highcharts';\nimport HighchartsReact from 'highcharts-react-official';\nimport moment from 'moment';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ChartsDeaths(_ref) {\n  _s();\n\n  let {\n    report\n  } = _ref;\n\n  const generateOptions = report => {\n    const categories = report.map(item => moment(item.Date).format('MM/YYYY'));\n    return {\n      chart: {\n        height: 400,\n        zoomType: 'x'\n      },\n      title: {\n        text: 'Number of Deaths'\n      },\n      xAxis: {\n        categories: categories,\n        crosshair: true\n      },\n      subtitle: {\n        text: document.ontouchstart === undefined ? 'Click and drag in the plot area to zoom in' : 'Pinch the chart to zoom in'\n      },\n      colors: ['#F3585B'],\n      yAxis: {\n        min: 0,\n        title: {\n          text: null\n        },\n        labels: {\n          align: 'right'\n        }\n      },\n      plotOptions: {\n        area: {\n          fillColor: {\n            linearGradient: {\n              x1: 0,\n              y1: 0,\n              x2: 0,\n              y2: 1\n            },\n            stops: [[0, Highcharts.getOptions().colors[0]], [1, Highcharts.color(Highcharts.getOptions().colors[0]).setOpacity(0).get('rgba')]]\n          },\n          marker: {\n            radius: 2\n          },\n          lineWidth: 1,\n          states: {\n            hover: {\n              lineWidth: 1\n            }\n          },\n          threshold: null\n        }\n      },\n      series: [{\n        name: 'Number of Deaths',\n        data: report.map(item => item.Deaths),\n        dashStyle: 'longdash'\n      }]\n    };\n  };\n\n  const [options, setOptions] = useState({});\n  useEffect(() => {\n    setOptions(generateOptions(report));\n  }, [report]);\n  console.log('lightcharts', {\n    report\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chart__deaths \",\n    children: /*#__PURE__*/_jsxDEV(HighchartsReact, {\n      data: report,\n      highcharts: Highcharts,\n      options: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 6\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ChartsDeaths, \"jBsEYbJm5WyTsU2H3rVXKoPbh7U=\");\n\n_c = ChartsDeaths;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChartsDeaths\");","map":{"version":3,"names":["React","useEffect","useState","Highcharts","HighchartsReact","moment","ChartsDeaths","report","generateOptions","categories","map","item","Date","format","chart","height","zoomType","title","text","xAxis","crosshair","subtitle","document","ontouchstart","undefined","colors","yAxis","min","labels","align","plotOptions","area","fillColor","linearGradient","x1","y1","x2","y2","stops","getOptions","color","setOpacity","get","marker","radius","lineWidth","states","hover","threshold","series","name","data","Deaths","dashStyle","options","setOptions","console","log"],"sources":["C:/Users/ramma/Desktop/app_covid19/my-app-covid/src/Element/ChartsDeaths/index.js"],"sourcesContent":["\r\nimport React, { useEffect, useState } from 'react'\r\nimport Highcharts from 'highcharts';\r\nimport HighchartsReact from 'highcharts-react-official';\r\nimport moment from 'moment';\r\n\r\nexport default function ChartsDeaths({ report }) {\r\n\r\n  const generateOptions = (report) => {\r\n    const categories = report.map((item) => moment(item.Date).format('MM/YYYY'));\r\n    return {\r\n      chart: {\r\n        height: 400,\r\n        zoomType: 'x',\r\n      },\r\n      title: {\r\n        text: 'Number of Deaths',\r\n      },\r\n      xAxis: {\r\n        categories: categories,\r\n        crosshair: true,\r\n      },\r\n      subtitle: {\r\n        text: document.ontouchstart === undefined ?\r\n          'Click and drag in the plot area to zoom in' : 'Pinch the chart to zoom in'\r\n      },\r\n      colors: ['#F3585B'],\r\n      yAxis: {\r\n        min: 0,\r\n        title: {\r\n            text: null,\r\n        },\r\n        labels: {\r\n            align: 'right',\r\n        },\r\n    },\r\n    plotOptions: {\r\n      area: {\r\n          fillColor: {\r\n              linearGradient: {\r\n                  x1: 0,\r\n                  y1: 0,\r\n                  x2: 0,\r\n                  y2: 1\r\n              },\r\n              stops: [\r\n                  [0, Highcharts.getOptions().colors[0]],\r\n                  [1, Highcharts.color(Highcharts.getOptions().colors[0]).setOpacity(0).get('rgba')]\r\n              ]\r\n          },\r\n          marker: {\r\n              radius: 2\r\n          },\r\n          lineWidth: 1,\r\n          states: {\r\n              hover: {\r\n                  lineWidth: 1\r\n              }\r\n          },\r\n          threshold: null\r\n      }\r\n  },\r\n      series: [\r\n        {\r\n          name: 'Number of Deaths',\r\n          data: report.map((item) => item.Deaths),\r\n          dashStyle: 'longdash'\r\n        },\r\n      ],\r\n\r\n    };\r\n  };\r\n  const [options, setOptions] = useState({});\r\n\r\n  useEffect(() => {\r\n    setOptions(generateOptions(report));\r\n  }, [report]);\r\n\r\n  console.log('lightcharts', { report });\r\n  return (\r\n    <div className='chart__deaths ' >\r\n     <HighchartsReact\r\n            data={report}\r\n            highcharts={Highcharts}\r\n            options={options}\r\n          />\r\n    </div>\r\n  )\r\n}\r\n\r\n"],"mappings":";;;AACA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,eAAP,MAA4B,2BAA5B;AACA,OAAOC,MAAP,MAAmB,QAAnB;;AAEA,eAAe,SAASC,YAAT,OAAkC;EAAA;;EAAA,IAAZ;IAAEC;EAAF,CAAY;;EAE/C,MAAMC,eAAe,GAAID,MAAD,IAAY;IAClC,MAAME,UAAU,GAAGF,MAAM,CAACG,GAAP,CAAYC,IAAD,IAAUN,MAAM,CAACM,IAAI,CAACC,IAAN,CAAN,CAAkBC,MAAlB,CAAyB,SAAzB,CAArB,CAAnB;IACA,OAAO;MACLC,KAAK,EAAE;QACLC,MAAM,EAAE,GADH;QAELC,QAAQ,EAAE;MAFL,CADF;MAKLC,KAAK,EAAE;QACLC,IAAI,EAAE;MADD,CALF;MAQLC,KAAK,EAAE;QACLV,UAAU,EAAEA,UADP;QAELW,SAAS,EAAE;MAFN,CARF;MAYLC,QAAQ,EAAE;QACRH,IAAI,EAAEI,QAAQ,CAACC,YAAT,KAA0BC,SAA1B,GACJ,4CADI,GAC2C;MAFzC,CAZL;MAgBLC,MAAM,EAAE,CAAC,SAAD,CAhBH;MAiBLC,KAAK,EAAE;QACLC,GAAG,EAAE,CADA;QAELV,KAAK,EAAE;UACHC,IAAI,EAAE;QADH,CAFF;QAKLU,MAAM,EAAE;UACJC,KAAK,EAAE;QADH;MALH,CAjBF;MA0BPC,WAAW,EAAE;QACXC,IAAI,EAAE;UACFC,SAAS,EAAE;YACPC,cAAc,EAAE;cACZC,EAAE,EAAE,CADQ;cAEZC,EAAE,EAAE,CAFQ;cAGZC,EAAE,EAAE,CAHQ;cAIZC,EAAE,EAAE;YAJQ,CADT;YAOPC,KAAK,EAAE,CACH,CAAC,CAAD,EAAInC,UAAU,CAACoC,UAAX,GAAwBd,MAAxB,CAA+B,CAA/B,CAAJ,CADG,EAEH,CAAC,CAAD,EAAItB,UAAU,CAACqC,KAAX,CAAiBrC,UAAU,CAACoC,UAAX,GAAwBd,MAAxB,CAA+B,CAA/B,CAAjB,EAAoDgB,UAApD,CAA+D,CAA/D,EAAkEC,GAAlE,CAAsE,MAAtE,CAAJ,CAFG;UAPA,CADT;UAaFC,MAAM,EAAE;YACJC,MAAM,EAAE;UADJ,CAbN;UAgBFC,SAAS,EAAE,CAhBT;UAiBFC,MAAM,EAAE;YACJC,KAAK,EAAE;cACHF,SAAS,EAAE;YADR;UADH,CAjBN;UAsBFG,SAAS,EAAE;QAtBT;MADK,CA1BN;MAoDLC,MAAM,EAAE,CACN;QACEC,IAAI,EAAE,kBADR;QAEEC,IAAI,EAAE5C,MAAM,CAACG,GAAP,CAAYC,IAAD,IAAUA,IAAI,CAACyC,MAA1B,CAFR;QAGEC,SAAS,EAAE;MAHb,CADM;IApDH,CAAP;EA6DD,CA/DD;;EAgEA,MAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBrD,QAAQ,CAAC,EAAD,CAAtC;EAEAD,SAAS,CAAC,MAAM;IACdsD,UAAU,CAAC/C,eAAe,CAACD,MAAD,CAAhB,CAAV;EACD,CAFQ,EAEN,CAACA,MAAD,CAFM,CAAT;EAIAiD,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2B;IAAElD;EAAF,CAA3B;EACA,oBACE;IAAK,SAAS,EAAC,gBAAf;IAAA,uBACC,QAAC,eAAD;MACO,IAAI,EAAEA,MADb;MAEO,UAAU,EAAEJ,UAFnB;MAGO,OAAO,EAAEmD;IAHhB;MAAA;MAAA;MAAA;IAAA;EADD;IAAA;IAAA;IAAA;EAAA,QADF;AASD;;GAlFuBhD,Y;;KAAAA,Y"},"metadata":{},"sourceType":"module"}