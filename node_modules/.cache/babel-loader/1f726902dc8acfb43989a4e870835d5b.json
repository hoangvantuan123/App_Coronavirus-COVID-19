{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ramma\\\\Desktop\\\\app_covid19\\\\my-app-covid\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useMemo } from 'react';\nimport { sortBy } from 'lodash';\nimport { getCountries, getReportByCountry } from './Element/API';\nimport Headtitle from './Element/Headtitle';\nimport Model3D from './Element/Model3D';\nimport Echarts from './Element/Echarts';\nimport Test from './Element/test';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [countries, setCountries] = React.useState([]);\n  const [selectedCountryId, setSelectedCountryId] = React.useState('');\n  const [report, setReport] = React.useState([]);\n  useEffect(() => {\n    getCountries().then(res => {\n      const {\n        data\n      } = res;\n      const countries = sortBy(data, 'Country');\n      setCountries(countries);\n      setSelectedCountryId('vn');\n    });\n  }, []);\n  const handleOnChange = React.useCallback(e => {\n    setSelectedCountryId(e.target.value);\n  }, []);\n  /*   console.log('tiel',selectedCountryId); */\n\n  useEffect(() => {\n    if (selectedCountryId) {\n      const selectedCountry = countries.find(country => country.ISO2 === selectedCountryId.toUpperCase());\n      getReportByCountry(selectedCountry.Slug).then(res => {\n        console.log('getReportByCountry', {\n          res\n        }); // remove last item = current date\n\n        res.data.pop();\n        setReport(res.data);\n      });\n    }\n  }, [selectedCountryId, countries]);\n  const boxitem = useMemo(() => {\n    if (report && report.length) {\n      const latestData = report[report.length - 1];\n    }\n\n    return [];\n  }, [report]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Header\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Coronavirus (COVID-19)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"choose__box\",\n      children: [/*#__PURE__*/_jsxDEV(Headtitle, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Test, {\n        countries: countries,\n        value: selectedCountryId,\n        handleOnChange: handleOnChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Model3D, {\n      report: report,\n      boxitem: boxitem\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Echarts, {\n      report: report\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"BD+Bef7dWyrBZ7fJz2ZVdYnqrmM=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useMemo","sortBy","getCountries","getReportByCountry","Headtitle","Model3D","Echarts","Test","App","countries","setCountries","useState","selectedCountryId","setSelectedCountryId","report","setReport","then","res","data","handleOnChange","useCallback","e","target","value","selectedCountry","find","country","ISO2","toUpperCase","Slug","console","log","pop","boxitem","length","latestData"],"sources":["C:/Users/ramma/Desktop/app_covid19/my-app-covid/src/App.js"],"sourcesContent":["import React, { useEffect, useMemo  } from 'react';\nimport { sortBy } from 'lodash';\nimport { getCountries, getReportByCountry } from './Element/API';\nimport Headtitle from './Element/Headtitle'\nimport Model3D from './Element/Model3D'\nimport Echarts from './Element/Echarts'\nimport Test from './Element/test';\n\n\n\nfunction App() {\n  const [countries, setCountries] = React.useState([]);\n  const [selectedCountryId, setSelectedCountryId] = React.useState('');\n  const [report, setReport] = React.useState([]);\n\n  useEffect(() => {\n    getCountries().then((res) => {\n      const { data } = res;\n      const countries = sortBy(data, 'Country');\n      setCountries(countries);\n      setSelectedCountryId('vn');\n\n    });\n  }, []);\n  const handleOnChange = React.useCallback((e) => {\n     setSelectedCountryId(e.target.value); \n   \n  }, []);\n\n  /*   console.log('tiel',selectedCountryId); */\n\n\n\n\n\n\n  useEffect(() => {\n    if (selectedCountryId) {\n      const selectedCountry = countries.find(\n        (country) => country.ISO2 === selectedCountryId.toUpperCase()\n      );\n      getReportByCountry(selectedCountry.Slug).then((res) => {\n        console.log('getReportByCountry', { res });\n        // remove last item = current date\n        res.data.pop();\n        setReport(res.data);\n      });\n    }\n  }, [selectedCountryId, countries]);\n\n\n\n\n  const boxitem = useMemo(() => {\n    if (report && report.length) {\n      const latestData = report[report.length - 1];\n      \n    }\n    return [];\n  }, [report]);\n\n  \n  return (\n    <>\n      <div className=\"Header\">\n        <h1>\n          Coronavirus (COVID-19)\n        </h1>\n      </div>\n      <div className='choose__box'>\n        <Headtitle />\n        <Test countries={countries} value={selectedCountryId} handleOnChange={handleOnChange} />\n      </div>\n      <Model3D report ={report}  boxitem= {boxitem}/>\n      <Echarts  report ={report}/>\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}