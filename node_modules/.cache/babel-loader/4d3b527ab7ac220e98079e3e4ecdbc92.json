{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ramma\\\\Desktop\\\\app_covid19\\\\my-app-covid\\\\src\\\\Element\\\\Echarts\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport Highcharts from 'highcharts';\nimport HighchartsReact from 'highcharts-react-official';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst generateOptions = data => {\n  const categories = data.map(item => moment(item.Date).format('DD/MM/YYYY'));\n  return {\n    chart: {\n      height: 500\n    },\n    title: {\n      text: 'Tổng ca nhiễm'\n    },\n    xAxis: {\n      categories: categories,\n      crosshair: true\n    },\n    colors: ['#F3585B'],\n    yAxis: {\n      min: 0,\n      title: {\n        text: null\n      },\n      labels: {\n        align: 'right'\n      }\n    },\n    tooltip: {\n      headerFormat: '<span style=\"font-size:10px\">{point.key}</span><table>',\n      pointFormat: '<tr><td style=\"color:{series.color};padding:0\">{series.name}: </td>' + '<td style=\"padding:0\"><b>{point.y} ca</b></td></tr>',\n      footerFormat: '</table>',\n      shared: true,\n      useHTML: true\n    },\n    plotOptions: {\n      column: {\n        pointPadding: 0.2,\n        borderWidth: 0\n      }\n    },\n    series: [{\n      name: 'Tổng Ca nhiễm',\n      data: data.map(item => item.Confirmed)\n    }]\n  };\n};\n\nexport default function Echarts(_ref) {\n  _s();\n\n  let {\n    data,\n    report\n  } = _ref;\n  const [options, setOptions] = useState({});\n  const [reportType, setReportType] = useState('all');\n  useEffect(() => {\n    setOptions(generateOptions(data));\n  }, [data]);\n  console.log('lightcharts', {\n    data\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Echarts\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart__statistical\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart__infections\",\n        children: /*#__PURE__*/_jsxDEV(HighchartsReact, {\n          data: report,\n          highcharts: Highcharts,\n          options: options\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart__deaths\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart__map\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Echarts, \"s6cBWKTvBu9UO+ZhJ7hZQa7wmUE=\");\n\n_c = Echarts;\n\nvar _c;\n\n$RefreshReg$(_c, \"Echarts\");","map":{"version":3,"names":["React","useEffect","useState","Highcharts","HighchartsReact","generateOptions","data","categories","map","item","moment","Date","format","chart","height","title","text","xAxis","crosshair","colors","yAxis","min","labels","align","tooltip","headerFormat","pointFormat","footerFormat","shared","useHTML","plotOptions","column","pointPadding","borderWidth","series","name","Confirmed","Echarts","report","options","setOptions","reportType","setReportType","console","log"],"sources":["C:/Users/ramma/Desktop/app_covid19/my-app-covid/src/Element/Echarts/index.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport Highcharts from 'highcharts';\r\nimport HighchartsReact from 'highcharts-react-official';\r\n\r\n\r\n\r\nconst generateOptions = (data) => {\r\n  const categories = data.map((item) => moment(item.Date).format('DD/MM/YYYY'));\r\n\r\n  return {\r\n    chart: {\r\n      height: 500,\r\n    },\r\n    title: {\r\n      text: 'Tổng ca nhiễm',\r\n    },\r\n    xAxis: {\r\n      categories: categories,\r\n      crosshair: true,\r\n    },\r\n    colors: ['#F3585B'],\r\n    yAxis: {\r\n      min: 0,\r\n      title: {\r\n        text: null,\r\n      },\r\n      labels: {\r\n        align: 'right',\r\n      },\r\n    },\r\n    tooltip: {\r\n      headerFormat: '<span style=\"font-size:10px\">{point.key}</span><table>',\r\n      pointFormat:\r\n        '<tr><td style=\"color:{series.color};padding:0\">{series.name}: </td>' +\r\n        '<td style=\"padding:0\"><b>{point.y} ca</b></td></tr>',\r\n      footerFormat: '</table>',\r\n      shared: true,\r\n      useHTML: true,\r\n    },\r\n    plotOptions: {\r\n      column: {\r\n        pointPadding: 0.2,\r\n        borderWidth: 0,\r\n      },\r\n    },\r\n    series: [\r\n      {\r\n        name: 'Tổng Ca nhiễm',\r\n        data: data.map((item) => item.Confirmed),\r\n      },\r\n    ],\r\n  };\r\n};\r\n\r\nexport default function Echarts({ data, report }) {\r\n  const [options, setOptions] = useState({});\r\n  const [reportType, setReportType] = useState('all');\r\n\r\n  useEffect(()=>{\r\n    setOptions(generateOptions(data));\r\n  }, [data]);\r\n\r\n  console.log('lightcharts',{ data });\r\n  return (\r\n    <div className='Echarts'>\r\n      <div className='chart__statistical'>\r\n        <div className='chart__infections'>\r\n          <HighchartsReact\r\n            data={report}\r\n            highcharts={Highcharts}\r\n            options={options}\r\n\r\n          />\r\n        </div>\r\n        <div className='chart__deaths'>\r\n        </div>\r\n      </div>\r\n      <div className='chart__map'>\r\n\r\n      </div>\r\n\r\n    </div>\r\n  )\r\n}\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,eAAP,MAA4B,2BAA5B;;;AAIA,MAAMC,eAAe,GAAIC,IAAD,IAAU;EAChC,MAAMC,UAAU,GAAGD,IAAI,CAACE,GAAL,CAAUC,IAAD,IAAUC,MAAM,CAACD,IAAI,CAACE,IAAN,CAAN,CAAkBC,MAAlB,CAAyB,YAAzB,CAAnB,CAAnB;EAEA,OAAO;IACLC,KAAK,EAAE;MACLC,MAAM,EAAE;IADH,CADF;IAILC,KAAK,EAAE;MACLC,IAAI,EAAE;IADD,CAJF;IAOLC,KAAK,EAAE;MACLV,UAAU,EAAEA,UADP;MAELW,SAAS,EAAE;IAFN,CAPF;IAWLC,MAAM,EAAE,CAAC,SAAD,CAXH;IAYLC,KAAK,EAAE;MACLC,GAAG,EAAE,CADA;MAELN,KAAK,EAAE;QACLC,IAAI,EAAE;MADD,CAFF;MAKLM,MAAM,EAAE;QACNC,KAAK,EAAE;MADD;IALH,CAZF;IAqBLC,OAAO,EAAE;MACPC,YAAY,EAAE,wDADP;MAEPC,WAAW,EACT,wEACA,qDAJK;MAKPC,YAAY,EAAE,UALP;MAMPC,MAAM,EAAE,IAND;MAOPC,OAAO,EAAE;IAPF,CArBJ;IA8BLC,WAAW,EAAE;MACXC,MAAM,EAAE;QACNC,YAAY,EAAE,GADR;QAENC,WAAW,EAAE;MAFP;IADG,CA9BR;IAoCLC,MAAM,EAAE,CACN;MACEC,IAAI,EAAE,eADR;MAEE7B,IAAI,EAAEA,IAAI,CAACE,GAAL,CAAUC,IAAD,IAAUA,IAAI,CAAC2B,SAAxB;IAFR,CADM;EApCH,CAAP;AA2CD,CA9CD;;AAgDA,eAAe,SAASC,OAAT,OAAmC;EAAA;;EAAA,IAAlB;IAAE/B,IAAF;IAAQgC;EAAR,CAAkB;EAChD,MAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBtC,QAAQ,CAAC,EAAD,CAAtC;EACA,MAAM,CAACuC,UAAD,EAAaC,aAAb,IAA8BxC,QAAQ,CAAC,KAAD,CAA5C;EAEAD,SAAS,CAAC,MAAI;IACZuC,UAAU,CAACnC,eAAe,CAACC,IAAD,CAAhB,CAAV;EACD,CAFQ,EAEN,CAACA,IAAD,CAFM,CAAT;EAIAqC,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA0B;IAAEtC;EAAF,CAA1B;EACA,oBACE;IAAK,SAAS,EAAC,SAAf;IAAA,wBACE;MAAK,SAAS,EAAC,oBAAf;MAAA,wBACE;QAAK,SAAS,EAAC,mBAAf;QAAA,uBACE,QAAC,eAAD;UACE,IAAI,EAAEgC,MADR;UAEE,UAAU,EAAEnC,UAFd;UAGE,OAAO,EAAEoC;QAHX;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA,QADF,eASE;QAAK,SAAS,EAAC;MAAf;QAAA;QAAA;QAAA;MAAA,QATF;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAaE;MAAK,SAAS,EAAC;IAAf;MAAA;MAAA;MAAA;IAAA,QAbF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAoBD;;GA7BuBF,O;;KAAAA,O"},"metadata":{},"sourceType":"module"}